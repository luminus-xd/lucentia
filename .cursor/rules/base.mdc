---
description: 
globs: 
alwaysApply: true
---
# AIエージェント向けコーディング規約

## 一般原則

- ユーザーテスト重視：自動チェックより実際のユーザーによる確認を優先
- リンターエラー対応：数回修正を試みた後、解決できない場合はユーザーに無効化の相談

## HTML/Pug 実装規則

- 適切な要素選択：非リンク要素にa要素を使用しない
- アクセシビリティ：WAI-ARIAはARIA Authoring Practice Guideに準拠して使用
  - 例外：aria-currentはパンくずリストやフォームプロセスに適用
- data属性：動的状態変化のみに使用し、静的スタイル適用には使用しない
- レイアウト：改行にはbr要素ではなくspan要素とdisplay指定を活用

## CSS/SCSS 規則

- レスポンシブ設計：どの画面幅でも横スクロールを発生させない
- カラー管理：色は:rootにカスタムプロパティとして定義（フォールバック値不使用）
- 無視可能なStylelint警告：
  - プロパティ順序
  - 論理プロパティ
  - カラーフォーマット

## TypeScript 開発規則

- 基本方針：関数型アプローチを優先
  - 条件分岐：switch/caseやハッシュマップを優先
  - 早期return：ネスト深度を最小化
  - 関数分離：関数は個別ファイルに分割
- テスト：純粋関数のテストはユーザーに確認（vitestを使用、ファイル名は*.spec.ts）
- コードスタイル：
  - JSDocsは日本語で記述
  - `<script type="module">`を利用するためDOMContentLoadedイベント不要
  - DOM操作時の型指定は具体的な要素型を使用（可能な場合）
- 型安全性：
  - any型は使用せずunknown型に置き換え
  - 型エラー解決オプション：
    - @ts-ignore
    - in演算子によるプロパティ確認
    - 明示的な型定義
- 品質保証：ESLintの警告レベルエラーも修正する

